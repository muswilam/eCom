@model OrdersViewModels

<div>
    <form id="controlForm">
        <div class="input-group mt-5 mb-3">
            <select class="form-control mr-5" name="filterByStatus" id="filterByStatus">
                <option selected disabled>Select status..</option>
                @foreach (var status in Model.AvailableStatus)
                {
                    var isSelected = Model.Status == status ? "selected" : string.Empty;
                    <option @isSelected>@status</option>
                }
            </select>

            <input id="selectDate" autocomplete="off" name="date" readonly class="form-control mr-5 ml-5 date-picker" placeholder="Filter by Date.." value="@Model.SelectedDate" />

            <div class="input-group-append ml-5">
                <button type="button" id="resetBtn" class="btn btn-primary "><i class="fa fa-refresh"></i> Reset</button>
            </div>
        </div>
    </form>
</div>

@if (Model.Orders != null && Model.Orders.Count > 0)
{
<div>
    <table id="ordersTable" class="table table-striped">
        <thead>
            <tr>
                <th class="font-weight-bold">Status</th>
                <th class="font-weight-bold">Total Price</th>
                <th class="font-weight-bold">Order Date</th>
                <th class="font-weight-bold">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.Orders)
            {
                <tr>
                    @switch (order.Status)
                    {
                        case "In Progress":
                            <td class="text-warning font-weight-bold">@order.Status</td>
                            break;
                        case "Delivered":
                            <td class="text-success font-weight-bold">@order.Status</td>
                            break;
                        default:
                            <td class="text-primary font-weight-bold">@order.Status</td>
                            break;
                    }
                    <td>$@order.TotalAmount</td>
                    <td>@order.OrderedAt.ToString("f")</td>
                    <td>
                        <a class="btn btn-info" href="@Url.Action("Details", "Order", new { id = order.Id})"><i class="fa fa-info"></i> Details</a>
                    </td>
                </tr>
            }
        </tbody>

    </table>

    <div class="product-pagination text-center clearfix mb-2">
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {
            <ul class="flat-pagination">
                @if (Model.Pager.CurrentPage != 1)
                {
                    <li class="prev">
                        <a class="pageButtons" data-pageno="1" style="cursor:pointer"><i class="fa fa-angle-double-left"></i></a>
                    </li>
                    <li>
                        <a class="pageButtons" data-pageno="@(Model.Pager.CurrentPage -1)" style="cursor:pointer"><i class="fa fa-angle-left"></i></a>
                    </li>
                }

                @for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    string activeClass = Model.Pager.CurrentPage == page ? "active" : string.Empty;

                    <li class="@activeClass">
                        <a class="pageButtons" data-pageno="@page" style="cursor:pointer">@page</a>
                    </li>
                }
                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        <a class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)" style="cursor:pointer"><i class="fa fa-angle-right"></i></a>
                    </li>
                    <li>
                        <a class="pageButtons" data-pageno="@Model.Pager.EndPage" style="cursor:pointer"><i class="fa fa-angle-double-right"></i></a>
                    </li>
                }
            </ul>
        }
    </div>
</div>
}
else
{
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="alert alert-danger">
                        <i class="fa fa-bell"></i> No orders.
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<script>
    $("#filterByStatus").change(function () {
        $.ajax({
            url: '@Url.Action("OrderTable","Order")',
            data: {
                status: $("#filterByStatus").val(),
                date: $("#selectDate").val(),
            },
        })
        .done(function (result) {
            $("#tableContainer").html(result);
            focusElement("tableContainer");
        })
        .fail(function () {
            alert("Fail");
        })
    });

    //select date, month and year
    $(".date-picker").datepicker({
        dateFormat: 'MM yy',
        changeMonth: true,
        changeYear: true,
        showButtonPanel: true,
        minDate: new Date(2018, 1-1),
        maxDate: new Date(),

        //after selected, send value to server
        onClose: function (dateText, inst) {
            debugger;
            var month = $("#ui-datepicker-div .ui-datepicker-month :selected").val();
            var year = $("#ui-datepicker-div .ui-datepicker-year :selected").val();
            $(this).val($.datepicker.formatDate('MM yy', new Date(year, month, 1)));

            $.ajax({
                url: '@Url.Action("OrderTable","Order")',
                data: {
                    date: $("#selectDate").val(),
                    status: '@Model.Status',
                },
            }).done(function (result) {
                $("#tableContainer").html(result);
                focusElement("tableContainer");
            })
            .fail(function () {
                alert("Fail");
            })
        },
    });

    //style calendar position
    $(".date-picker").focus(function () {
        $(".ui-datepicker-calendar").hide();
        $("#ui-datepicker-div").position({
            my: "center top",
            at: "center bottom",
            of: $(this)
        });
    });

    $(".pageButtons").click(function () {
        $.ajax({
            url: '@Url.Action("OrderTable","Order")',
            data: {
                pageNo: $(this).attr("data-pageNo"),
                status: '@Model.Status',
                date: $("#selectDate").val(),
            },
        })
        .done(function (result) {
            $("#tableContainer").html(result);
            focusElement("tableContainer");
        })
        .fail(function () {
            alert("Fail");
        })
    });

    $("#resetBtn").click(function () {
        $.ajax({
            url: '@Url.Action("OrderTable","Order")'
        })
        .done(function (result) {
            $("#tableContainer").html(result);
            focusElement("tableContainer");
        })
         .fail(function () {
             alert("Fail");
         })
    })
</script>