@model ShopViewModel

@using eCom.Web.Code;

@{
    ViewBag.Title = "Shop";
}

<div class="page-title parallax parallax1">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="page-title-heading">
                    <h1 class="title">Shop</h1>
                </div><!-- /.page-title-heading -->
            </div><!-- /.col-md-12 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</div><!-- /.page-title -->

<section class="flat-row main-shop shop-slidebar">
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <div class="sidebar slidebar-shop">
                    <div class="widget widget-search">
                        <form role="search" method="get" class="search-form" action="@Url.Action("Index","Shop")">
                            <label>
                                <input type="search" class="search-field" placeholder="Search …" value="" name="searchTerm">
                            </label>
                            <input type="submit" class="search-submit" value="Search">
                        </form>
                    </div><!-- /.widget-search -->
                    <div class="widget widget-sort-by">
                        <h5 class="widget-title">
                            Sort By
                        </h5>
                        <ul>
                            <li>
                                <a href="@Url.Action("Index","Shop", new { sortBy = (byte) SortByEnums.Default, categoryId = Model.CategoryId})" class="@(Model.SortBy.HasValue && Model.SortBy.Value == (byte) SortByEnums.Default ? "active" : string.Empty)">Default-Newest</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "Shop", new { sortBy = (byte)SortByEnums.Popularity, categoryId = Model.CategoryId })" class="@(Model.SortBy.HasValue && Model.SortBy.Value == (byte) SortByEnums.Popularity ? "active" : string.Empty)">Popularity</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "Shop", new { sortBy = (byte)SortByEnums.PriceLowToHigh, categoryId = Model.CategoryId })" class="@(Model.SortBy.HasValue && Model.SortBy.Value == (byte) SortByEnums.PriceLowToHigh ? "active" : string.Empty)">Price: Low to high</a>
                            </li>
                            <li>
                                <a href="@Url.Action("Index", "Shop", new { sortBy = (byte)SortByEnums.PriceHighToLow, categoryId = Model.CategoryId })" class="@(Model.SortBy.HasValue && Model.SortBy.Value == (byte) SortByEnums.PriceHighToLow ? "active" : string.Empty)">Price: High to low</a>
                            </li>
                        </ul>
                    </div><!-- /.widget-sort-by -->
                    <div class="widget widget_tag">
                        <h5 class="widget-title">
                           Featured Categories
                        </h5>
                        <div class="tag-list">
                            @foreach (var category in Model.FeaturedCategories)
                            {
                                <a href="@Url.Action("Index", "Shop", new { categoryId = category.Id, sortBy = Model.SortBy })" class="@(Model.CategoryId.HasValue && Model.CategoryId.Value == category.Id ? "active" : string.Empty)">@category.Name</a>
                            }
                        </div>
                    </div><!-- /.widget -->
                    <div class="widget widget-price">
                        <h5 class="widget-title">Filter by price</h5>
                        <div class="price-filter">
                            <div id="slide-range"></div>
                            <p class="amount">
                                Price: <input type="text" id="amount" disabled="">
                            </p>
                        </div>
                    </div>
                <a href="@Url.Action("Index","Shop")" class="btn btn-danger">Reset Filters</a>
                </div><!-- /.sidebar -->
            </div><!-- /.col-md-3 -->
            <div class="col-md-9">
                <div id="productsDiv">
                    @{
                        var filterProductViewModel = new FilterProductViewModel();

                        filterProductViewModel.Products = Model.Products;

                        Html.RenderPartial("FilterProducts", filterProductViewModel);
                    }
                </div>
                <div class="filter-shop clearfix">
                    <p class="showing-product float-right">
                        Showing 1–12 of 56 Products
                    </p>
                </div><!-- /.filte-shop -->
               
            </div><!-- /.col-md-9 -->
        </div><!-- /.row -->
    </div><!-- /.container -->
</section><!-- /.flat-row -->

<script>
    var callTimeout;

    var priceSilder = $("#slide-range").slider({
    			range: true,
    			min: 0,
    			max: @Model.MaximumPrice,
                step: 0.01, // <-- for decimal numbers
    			values: [ 0, @Model.MaximumPrice ],
        slide: function( event, ui ) {
            var minPrice = ui.values[ 0 ];
            var maxPrice = ui.values[ 1 ];

            $( "#amount" ).val( "$" + minPrice + " - " + "$" + maxPrice );

            clearTimeout(callTimeout);
            callTimeout = setTimeout(GetData, 1500); //timeout for make request get time to come and responce (performance)
        }
    });

    //get products by filtering them 
    function GetData() {
        $.ajax({
            url: '@Url.Action("FilterProducts","Shop")',
            data: {
                minPrice: priceSilder.slider("values",0),
                maxPrice: priceSilder.slider("values",1),    
                categoryId: '@Model.CategoryId',
                sortBy: '@Model.SortBy'
            },
        })
         .done(function (result) {
             $("#productsDiv").html(result);
         })
         .fail(function () {
             alert("Fail");
         });
    }
</script>