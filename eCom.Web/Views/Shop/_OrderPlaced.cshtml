@model OrderPlacedViewModel


@if (Model != null && Model.Orders != null && Model.Orders.Count > 0)
{
    <section class="flat-row main-shop shop-slidebar">
        <div class="container">
            <div class="row">
                <div class="col-md-6 order-md-2 mb-4">
                    <h2 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Orders</span>
                    </h2>
                    <ul class="list-group mb-3">
                        @foreach (var order in Model.Orders)
                        {
                            <li class="list-group-item  d-block justify-content-between lh-condensed">
                                <div>
                                    <h2 class="my-0">
                                        - @switch (order.Status)
                                        {
                                            case "In Progress":
                                                <span class="badge badge-warning  ">@order.Status</span>
                                                break;
                                            case "Delivered":
                                            <span class="badge badge-success ">@order.Status</span>
                                                break;
                                            default:
                                            <span class="badge badge-primary ">@order.Status</span>
                                                break;
                                        }
                                    </h2>
                                </div>
                                <div class="mt-3 mb-2">
                                    <h4 class="text-muted">
                                        Total amount: $<text class="text-danger">@order.TotalAmount </text>
                                    </h4>
                                </div>
                                <div class="mt-3 mb-2">
                                    <h4 class="text-muted">
                                        Deliver on: @(order.OrderedAt.AddDays(5).ToString("D"))
                                    </h4>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <div class="col-md-3 ml-4 order-md-1">
                    <h2 class="d-flex justify-content-between align-items-center mb-3">
                        <span class="text-muted">Personal Information</span>
                    </h2>
                    <div class="needs-validation" novalidate="">
                        <div class="row pt-3">
                            <div class="col-md-12 mb-3">
                                <h5>Name : <span class="badge badge-info p-2">@Model.User.Name</span> </h5>
                            </div>
                            <div class="col-md-12 mb-3">
                                <h5>Email : <span class="badge badge-info p-2">@Model.User.Email</span> </h5>
                            </div>
                            <div class="col-md-12 mb-3">
                                <h5>Address : <span class="badge badge-info p-2">@Model.User.Address</span> </h5>
                            </div>
                            <div class="col-md-12 mb-3">
                                <h5>Orders : <span class="badge badge-info p-2">@Model.Pager.TotalItems</span> </h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- /.container -->
    </section>

    <div class="product-pagination text-center clearfix">
        @if (Model.Pager != null && Model.Pager.TotalPages > 1)
        {
            <ul class="flat-pagination">
                @if (Model.Pager.CurrentPage != 1)
                {
                    <li class="prev">
                        <a class="pageButtons" data-pageno="1" style="cursor:pointer"><i class="fa fa-angle-double-left"></i></a>
                    </li>
                    <li>
                        <a class="pageButtons" data-pageno="@(Model.Pager.CurrentPage -1)" style="cursor:pointer"><i class="fa fa-angle-left"></i></a>
                    </li>
                }

                @for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                {
                    string activeClass = Model.Pager.CurrentPage == page ? "active" : string.Empty;

                    <li class="@activeClass">
                        <a class="pageButtons" data-pageno="@page" style="cursor:pointer">@page</a>
                    </li>
                }
                @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                {
                    <li>
                        <a class="pageButtons" data-pageno="@(Model.Pager.CurrentPage + 1)" style="cursor:pointer"><i class="fa fa-angle-right"></i></a>
                    </li>
                    <li>
                        <a class="pageButtons" data-pageno="@Model.Pager.EndPage" style="cursor:pointer"><i class="fa fa-angle-double-right"></i></a>
                    </li>
                }
            </ul>
        }
    </div>
    
    <script>
        $(".pageButtons").click(function () {
            $.ajax({
                url: '@Url.Action("_OrderPlaced","Shop")',
                data: {
                    pageNo: $(this).attr("data-pageNo"),
                },
            })
            .done(function (result) {
                $("#orderPlacedDiv").html(result);
                focusElement("orderPlacedDiv");
            })
            .fail(function () {
                alert("Fail");
            })
        });
    </script>
}
else
{
    <div class="alert alert-danger">
        No Orders have been placed yet.
    </div>
}