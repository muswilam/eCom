@model ReviewsViewModel


<ul class="menu-tab">
    <li class="active">
        @if (Model.Reviews != null && Model.Reviews.Count() > 0)
        {
            <span class="badge badge-warning p-2">@Model.Reviews.Count()</span> 
        }
        Reviews
    </li>
</ul>
<div class="content-tab">
    <div class="content-inner">
        <div class="inner max-width-83 padding-top-33">
            @if (Model.Reviews != null && Model.Reviews.Count() > 0)
            {
                <ol id="reviews" class="review-list">
                    @foreach (var review in Model.Reviews)
                    {
                        var userName = Model.User.Users.Where(u => u.Id == review.UserId).First().Name;

                        <li class="review">
                            @if (User.IsInRole("Admin"))
                            {
                                <div class="mb-1 text-right">
                                    <span class="delReview text-danger h5" data-id="@review.Id" data-name="@userName" style="cursor:pointer"><i class="fa fa-trash fa-lg"></i></span>
                                </div>
                            }
                            <div class="text-wrap">
                                <div class="review-meta">
                                    <h5 class="name"><i class="fa fa-user fa-sm"></i> @userName</h5>

                                    <div class="flat-star style-1">
                                        @for (int i = 0; i < review.Rate; i++)
                                        {
                                            <i class="fa fa-star"></i>
                                        }
                                    </div>

                                </div>
                                <div class="review-text">
                                    <p>@review.Body</p>

                                    <div class="float-right text-gray-dark">
                                        <p>@review.ReviewedAt.ToString("yyyy-MMM, dd hh:mm tt")</p>
                                    </div>
                                </div>
                            </div>
                        </li><!--  /.review    -->

                    }
                </ol><!-- /.review-list -->
            }

            <div class="comment-respond review-respond" id="respond">

                <form novalidate="" class="comment-form review-form" id="reviewform" method="post" action="#">

                    <div class="star-rating float-right">
                        <h5>Rate</h5>

                        <span class="fa fa-star-o" data-rating="1"></span>
                        <span class="fa fa-star-o" data-rating="2"></span>
                        <span class="fa fa-star-o" data-rating="3"></span>
                        <span class="fa fa-star-o" data-rating="4"></span>
                        <span class="fa fa-star-o" data-rating="5"></span>
                        <input type="hidden" name="Rate" class="rating-value" value=""> 
                    </div>

                    <h5>Write a review</h5>

                    <p class="comment-form-comment">
                        <input type="text" class="form-control" name="Body" placeholder="Review...." />
                    </p>

                    <input type="hidden" name="UserId" value="@Model.AuthenticatedUser.Id" />
                    <input type="hidden" name="ProductId" value="@Model.ProductId" />
                    <p class="form-submit">
                        <button id="addReviewBtn" type="button" class="comment-submit">Submit</button>
                    </p>
                </form>
            </div><!-- /.comment-respond -->

        </div>
    </div><!-- /.content-inner -->
</div>

<script>

    //star-rating design
    var $star_rating = $('.star-rating .fa');

    var SetRatingStar = function () {
        return $star_rating.each(function () {
            if (parseInt($star_rating.siblings('input.rating-value').val()) >= parseInt($(this).data('rating'))) {
                return $(this).removeClass('fa-star-o').addClass('fa-star');
            } else {
                return $(this).removeClass('fa-star').addClass('fa-star-o');
            }
        });
    };

    $star_rating.on('click', function () {
        $star_rating.siblings('input.rating-value').val($(this).data('rating'));
        return SetRatingStar();
    });

    SetRatingStar();

    @* validation form *@
    $('#reviewform').validate({
        ignore: [], //enable validation for hidden fields
        rules: {
            Rate: {
                required: true,
            },
            Body: {
                required: true,
            }
        },
        messages: {
            Rate: {
                required: 'Rate is required.',
            },
            Body: {
                required: 'Review is required.'
            }
        },
        errorClass: "text-danger"
    });


    //create review
    $("#addReviewBtn").click(function () {

        if ($('#reviewform').valid()) {
            $.ajax({
                url: '@Url.Action("AddReview","Review")',
                data: $("#reviewform").serialize(),
            })
            .done(function (result) {
                if (result) {
                    $("#reviewsDiv").html(result);
                } else {
                    swal("Failed", "Something went wrong.", {
                        icon: "warning",
                    });
                };
            })
            .fail(function () {
                swal("Failed", "Invalid inputs.", {
                    icon: "warning",
                });
            })
        } else {
            swal("Failed", "Invalid inputs.", {
                icon: "warning",
            });
        }
    });

    //remove review by admin
    $(".delReview").click(function () {
        var id = $(this).attr("data-id");
        var name = $(this).attr("data-name");

        swal({
            title: "Confirm!",
            text: "Are you sure. you wanna delete " + name + " ?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
      .then(function (willDelete) {
          if (willDelete) {
              $.ajax({
                  url: '@Url.Action("RemoveReview", "Review")',
                  data: {
                      id: id,
                      productId: '@Model.ProductId',
                  },
                  type: 'Post'
              })
              .done(function (result) {

                  swal(name + " deleted successfuly.", {
                      icon: "success",
                  });

                  $("#reviewsDiv").html(result);
              })
              swal("Failed", "Something went wrong.", {
                  icon: "warning",
              });
          }
      });
    });

</script>